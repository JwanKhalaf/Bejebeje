@model Bejebeje.Models.Lyric.LyricDetailsViewModel

@{
  ViewData["Title"] = $"{Model.Artist.FullName} - {Model.Title} lyrics";
  ViewData["Description"] = $"Lyrics for {Model.Title} by {Model.Artist.FullName}. Gotinê strana {Model.Title} ya {Model.Artist.FullName}. {Model.Title} sözleri - {Model.Artist.FullName}";
}

<div class="breadcrumb-nav">
  <nav>
    <a asp-controller="Lyric" asp-action="ArtistLyrics" asp-route-artistSlug="@Model.Artist.PrimarySlug">/ @Model.Artist.FullName</a> / @Model.Title
  </nav>
</div>

<div class="search">
  <form asp-controller="Search" asp-action="Index" method="post" class="search__form">
    <input class="search__input" placeholder="search for artist or lyric" name="searchTerm" />
  </form>
</div>


<div class="artist-info-wrap">
  <div class="artist-info">
    <picture>
      <source type="image/webp" srcset=@($"{Model.Artist.ImageUrl}.webp")>
      <source type="image/jpeg" srcset=@($"{Model.Artist.ImageUrl}.jpg")>

      <img class="artist-info__image"
           src=@($"{Model.Artist.ImageUrl}.jpg")
           alt="@Model.Artist.ImageAlternateText"
           width="100"
           height="100" />
    </picture>

    <div>
      <h1 class="artist-info__name">@Model.Artist.FullName</h1>
    </div>
  </div>
</div>

<div class="lyric__wrap">
  <div class="lyric__title-wrap">
    <h1 class="lyric__title">@Model.Title</h1>
  </div>

  <div class="likes__wrap">
    <div class="like__button">
      <a asp-route-lyricId="@Model.Id" class="@(Model.AlreadyLiked ? "like__link-clicked" : "like__link")" id="like-btn"></a>

      <p class="like__count">@Model.NumberOfLikes</p>
    </div>
  </div>

  <div class="lyric__body">
    @Model.Body
  </div>
</div>

@section Scripts {
  <script>
    docReady(function () {
      let likeBtn = document.getElementById('like-btn');

      let likeLyric = (event) => {
        event.preventDefault();
        console.log('attemping to like a lyric!');

        // 1. create a new XMLHttpRequest object
        let request = new XMLHttpRequest();

        // 2. configure the request
        request.open('GET', 'https://localhost:5001/lyrics/like/@Model.Id');

        // 3. send the request over the network
        request.send();

        // 4. this will be called after the response is received
        request.onload = function () {
          if (request.status != 200) {
            // analyse http status of the response
            alert(`Error ${request.status}: ${request.statusText}`);
          } else {
            // show the result
            alert(`Done, got ${request.response.length} bytes`); // response is the server response
          }
        };

        request.onprogress = function (event) {
          if (event.lengthComputable) {
            alert(`Received ${event.loaded} of ${event.total} bytes`);
          } else {
            alert(`Received ${event.loaded} bytes`); // no Content-Length
          }
        };

        request.onerror = function () {
          alert("Request failed");
        };
      }

      likeBtn.addEventListener('click', likeLyric);
    });
  </script>
}