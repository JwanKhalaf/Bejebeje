// <auto-generated />
using System;
using Bejebeje.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bejebeje.DataAccess.Migrations
{
  [DbContext(typeof(BbContext))]
  [Migration("20190928222224_InitialCreate")]
  partial class InitialCreate
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
          .HasAnnotation("ProductVersion", "3.0.0")
          .HasAnnotation("Relational:MaxIdentifierLength", 63);

      modelBuilder.Entity("Bejebeje.Domain.Artist", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("FirstName")
                      .HasColumnName("first_name")
                      .HasColumnType("text");

            b.Property<string>("FullName")
                      .HasColumnName("full_name")
                      .HasColumnType("text");

            b.Property<bool>("IsApproved")
                      .HasColumnName("is_approved")
                      .HasColumnType("boolean");

            b.Property<bool>("IsDeleted")
                      .HasColumnName("is_deleted")
                      .HasColumnType("boolean");

            b.Property<string>("LastName")
                      .HasColumnName("last_name")
                      .HasColumnType("text");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("UserId")
                      .HasColumnName("user_id")
                      .HasColumnType("text");

            b.HasKey("Id");

            b.ToTable("artists");
          });

      modelBuilder.Entity("Bejebeje.Domain.ArtistImage", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<int>("ArtistId")
                      .HasColumnName("artist_id")
                      .HasColumnType("integer");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<byte[]>("Data")
                      .HasColumnName("data")
                      .HasColumnType("bytea");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.HasKey("Id");

            b.HasIndex("ArtistId")
                      .IsUnique();

            b.ToTable("artist_images");
          });

      modelBuilder.Entity("Bejebeje.Domain.ArtistSlug", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<int>("ArtistId")
                      .HasColumnName("artist_id")
                      .HasColumnType("integer");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<bool>("IsDeleted")
                      .HasColumnName("is_deleted")
                      .HasColumnType("boolean");

            b.Property<bool>("IsPrimary")
                      .HasColumnName("is_primary")
                      .HasColumnType("boolean");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("Name")
                      .HasColumnName("name")
                      .HasColumnType("text");

            b.HasKey("Id");

            b.HasIndex("ArtistId");

            b.ToTable("artist_slug");
          });

      modelBuilder.Entity("Bejebeje.Domain.Author", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<string>("Biography")
                      .HasColumnName("biography")
                      .HasColumnType("text");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("FirstName")
                      .HasColumnName("first_name")
                      .HasColumnType("text");

            b.Property<string>("FullName")
                      .HasColumnName("full_name")
                      .HasColumnType("text");

            b.Property<bool>("IsApproved")
                      .HasColumnName("is_approved")
                      .HasColumnType("boolean");

            b.Property<bool>("IsDeleted")
                      .HasColumnName("is_deleted")
                      .HasColumnType("boolean");

            b.Property<string>("LastName")
                      .HasColumnName("last_name")
                      .HasColumnType("text");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("UserId")
                      .HasColumnName("user_id")
                      .HasColumnType("text");

            b.HasKey("Id");

            b.ToTable("authors");
          });

      modelBuilder.Entity("Bejebeje.Domain.AuthorImage", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<int>("AuthorId")
                      .HasColumnName("author_id")
                      .HasColumnType("integer");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<byte[]>("Data")
                      .HasColumnName("data")
                      .HasColumnType("bytea");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.HasKey("Id");

            b.HasIndex("AuthorId")
                      .IsUnique();

            b.ToTable("author_image");
          });

      modelBuilder.Entity("Bejebeje.Domain.AuthorSlug", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<int>("AuthorId")
                      .HasColumnName("author_id")
                      .HasColumnType("integer");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<bool>("IsDeleted")
                      .HasColumnName("is_deleted")
                      .HasColumnType("boolean");

            b.Property<bool>("IsPrimary")
                      .HasColumnName("is_primary")
                      .HasColumnType("boolean");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("Name")
                      .HasColumnName("name")
                      .HasColumnType("text");

            b.HasKey("Id");

            b.HasIndex("AuthorId");

            b.ToTable("author_slug");
          });

      modelBuilder.Entity("Bejebeje.Domain.Lyric", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<int>("ArtistId")
                      .HasColumnName("artist_id")
                      .HasColumnType("integer");

            b.Property<int?>("AuthorId")
                      .HasColumnName("author_id")
                      .HasColumnType("integer");

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("HtmlBody")
                      .HasColumnName("html_body")
                      .HasColumnType("text");

            b.Property<bool>("IsApproved")
                      .HasColumnName("is_approved")
                      .HasColumnType("boolean");

            b.Property<bool>("IsDeleted")
                      .HasColumnName("is_deleted")
                      .HasColumnType("boolean");

            b.Property<string>("MarkdownBody")
                      .HasColumnName("markdown_body")
                      .HasColumnType("text");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("Title")
                      .HasColumnName("title")
                      .HasColumnType("text");

            b.Property<string>("UserId")
                      .HasColumnName("user_id")
                      .HasColumnType("text");

            b.HasKey("Id");

            b.HasIndex("ArtistId");

            b.HasIndex("AuthorId");

            b.ToTable("lyrics");
          });

      modelBuilder.Entity("Bejebeje.Domain.LyricSlug", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasColumnName("id")
                      .HasColumnType("integer")
                      .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            b.Property<DateTime>("CreatedAt")
                      .HasColumnName("created_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<bool>("IsDeleted")
                      .HasColumnName("is_deleted")
                      .HasColumnType("boolean");

            b.Property<bool>("IsPrimary")
                      .HasColumnName("is_primary")
                      .HasColumnType("boolean");

            b.Property<int>("LyricId")
                      .HasColumnName("lyric_id")
                      .HasColumnType("integer");

            b.Property<DateTime?>("ModifiedAt")
                      .HasColumnName("modified_at")
                      .HasColumnType("timestamp without time zone");

            b.Property<string>("Name")
                      .HasColumnName("name")
                      .HasColumnType("text");

            b.HasKey("Id");

            b.HasIndex("LyricId");

            b.ToTable("lyric_slugs");
          });

      modelBuilder.Entity("Bejebeje.Domain.ArtistImage", b =>
          {
            b.HasOne("Bejebeje.Domain.Artist", "Artist")
                      .WithOne("Image")
                      .HasForeignKey("Bejebeje.Domain.ArtistImage", "ArtistId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("Bejebeje.Domain.ArtistSlug", b =>
          {
            b.HasOne("Bejebeje.Domain.Artist", null)
                      .WithMany("Slugs")
                      .HasForeignKey("ArtistId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("Bejebeje.Domain.AuthorImage", b =>
          {
            b.HasOne("Bejebeje.Domain.Author", "Author")
                      .WithOne("Image")
                      .HasForeignKey("Bejebeje.Domain.AuthorImage", "AuthorId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("Bejebeje.Domain.AuthorSlug", b =>
          {
            b.HasOne("Bejebeje.Domain.Author", null)
                      .WithMany("Slugs")
                      .HasForeignKey("AuthorId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });

      modelBuilder.Entity("Bejebeje.Domain.Lyric", b =>
          {
            b.HasOne("Bejebeje.Domain.Artist", "Artist")
                      .WithMany("Lyrics")
                      .HasForeignKey("ArtistId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();

            b.HasOne("Bejebeje.Domain.Author", "Author")
                      .WithMany("Lyrics")
                      .HasForeignKey("AuthorId");
          });

      modelBuilder.Entity("Bejebeje.Domain.LyricSlug", b =>
          {
            b.HasOne("Bejebeje.Domain.Lyric", null)
                      .WithMany("Slugs")
                      .HasForeignKey("LyricId")
                      .OnDelete(DeleteBehavior.Cascade)
                      .IsRequired();
          });
#pragma warning restore 612, 618
    }
  }
}
